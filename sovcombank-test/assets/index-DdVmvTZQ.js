(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function a(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(e){if(e.ep)return;e.ep=!0;const i=a(e);fetch(e.href,i)}})();const _="/assets/sprite-BpK12ttC.svg",l=(r,s)=>{const{className:a,width:t,height:e}=s;return`
        <svg class="${a}" width="${t}" height="${e}">
            <use xlink:href="${_}#${r}"></use>
        </svg>
    `};class d{constructor(){this._component=document.querySelector(".calendar"),this._btns=this._component.querySelectorAll(".calendar__btn"),this._onClick=this._onClick.bind(this),this._onPointerEnter=this._onPointerEnter.bind(this),this._component.addEventListener("click",this._onClick),this._component.addEventListener("pointermove",this._onPointerEnter),this._start=null,this._end=null}_onClick(s){const a=s.target.closest(".calendar__btn");if(a===null)return;const t=+a.dataset.index;if(this._start===null){this._start=t,this._end=this._start,a.classList.add("calendar__btn--state--active");return}if(this._start===t){this._start=null,this._end=null,a.classList.remove("calendar__btn--state--active");return}this._start=t<this._start?t:this._start,this._end=t>this._start?t:this._start,this._updateRange()}_onPointerEnter(s){const a=s.target.closest(".calendar__btn");if(!(a===null||this._start===null||this._start!==this._end)&&this._start!==null){const t=+a.dataset.index,e=t<this._start?t:this._start,i=t>=this._start?t:this._start;this._updateRange(e,i)}}_updateRange(s=this._start,a=this._end){this._btns.forEach((t,e)=>{const i=e<s||e>a,n=e===s,h=e===a,c=!n&&!h,o=n&&h;t.classList.toggle("calendar__btn--state--active",!i&&o),t.classList.toggle("calendar__btn--state--start",!i&&!o&&n),t.classList.toggle("calendar__btn--state--middle",!i&&!o&&c),t.classList.toggle("calendar__btn--state--end",!i&&!o&&h)})}}class m{constructor({defaultTheme:s="light",btnSelector:a,btnLightStateClassName:t="",btnDarkStateClassName:e="",lightThemeClassName:i="light-theme",darkThemeClassName:n="dark-theme"}){this._defaultTheme=s,this._oppositeDefaultTheme=s==="light"?"dark":"light",this._root=document.documentElement,this._btns=[...document.querySelectorAll(a)],this._btnLightStateClassName=t,this._btnDarkStateClassName=e,this._lightThemeClassName=i,this._darkThemeClassName=n,this.toggle=this.toggle.bind(this),this._updateThemeStuff=this._updateThemeStuff.bind(this),this._btns.forEach(h=>{h.addEventListener("click",this.toggle)}),this._matchMediaSupport=typeof window.matchMedia=="function",this._themeMedia=`(prefers-color-scheme: ${this._oppositeDefaultTheme})`,this._matchMediaSupport&&window.matchMedia(this._themeMedia).addEventListener("change",this._updateThemeStuff),this._updateThemeStuff()}toggle(){const s=!this._isCurrentLight;this._toggleBtnsState(s?"light":"dark"),this._root.classList.toggle(this._lightThemeClassName,s),this._root.classList.toggle(this._darkThemeClassName,!s),this._isCurrentLight=!this._isCurrentLight}_toggleBtnsState(s){const a=s==="light";this._btns.forEach(t=>{this._btnLightStateClassName!==""&&t.classList.toggle(this._btnLightStateClassName,a),this._btnDarkStateClassName!==""&&t.classList.toggle(this._btnDarkStateClassName,!a),t.setAttribute("aria-label",`Переключиться на ${a?"темную":"светлую"} тему`),t.innerHTML=l(a?"moon":"sun",{className:`toggle-theme-btn__icon${a?" toggle-theme-btn__icon--type--moon":""}`,width:50,height:50})})}_updateThemeStuff(){const s=this._root.classList.contains(this._lightThemeClassName),a=this._root.classList.contains(this._darkThemeClassName);!s&&!a?this._currentTheme=this._matchMediaSupport&&window.matchMedia(this._themeMedia).matches?this._oppositeDefaultTheme:this._defaultTheme:this._currentTheme=s?"light":"dark",this._isCurrentLight=this._currentTheme==="light",this._toggleBtnsState(this._currentTheme)}}const u=[...new Array(35)];document.querySelector("#app").innerHTML=`
    <button class="toggle-theme-btn" type="button" aria-label="переключить цветовую тему"></button>
    <div class="calendar calendar--theme--alpaca">
        <div class="calendar__header">
            <button class="calendar__month-btn calendar__month-btn--type--prev" aria-label="предыдущий месяц">${l("arrow",{className:"calendar__icon",width:32,height:32})}</button>
            <div class="calendar__month">Январь</div>
            <button class="calendar__month-btn calendar__month-btn--type--next" aria-label="следующий месяц">${l("arrow",{className:"calendar__icon",width:32,height:32})}</button>
        </div>
        <div class="calendar__body">${u.map((r,s)=>{const a=s+1,t=a%31,e=t===0?31:t;return`<button class="calendar__btn${a>=32?" calendar__btn--type--other-month":""}" type="button" data-index="${s}"><span class="calendar__day">${e}</span></button>`}).join("")}</div>
    </div>
`;new m({btnSelector:".toggle-theme-btn",btnLightStateClassName:"toggle-theme-btn--state--light",btnDarkStateClassName:"toggle-theme-btn--state--dark"});new d;
